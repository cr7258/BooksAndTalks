# Aggregations

## Bulk indexing TV sales 

PUT tv_sales/_bulk
{"index":{"_id":"1"}}
{"brand": "Samsung","name":"UHD TV","size_inches":65,"price_gbp":1400,"sales":17}
{"index":{"_id":"2"}}
{"brand":"Samsung","name":"UHD TV","size_inches":45,"price_gbp":1000,"sales":11}
{"index":{"_id":"3"}}
{"brand":"Samsung","name":"UHD TV","size_inches":23,"price_gbp":999,"sales":14}
{"index":{"_id":"4"}}
{"brand":"LG","name":"8K TV","size_inches":65,"price_gbp":1499,"sales":13}
{"index":{"_id":"5"}}
{ "brand":"LG","name":"4K TV","size_inches":55,"price_gbp":1100,"sales":31}
{"index":{"_id":"6"}}
{"brand":"Philips","name":"8K TV","size_inches":65,"price_gbp":1800,"sales":23}
{"index":{"_id":"7"}}
{"name":"8K TV","size_inches":65,"price_gbp":2000,"sales":23}
{"index":{"_id":"9"}}
{"name":"8K TV","size_inches":65,"price_gbp":2000,"sales":23,"best_seller":true}
{"index":{"_id":"10"}}
{"name":"4K TV","size_inches":75,"price_gbp":2200,"sales":14,"best_seller":false}

#Â METRIC Aggregations

# Finding the number of documents using value_count metric
GET tv_sales/_search
{
  "size": 0, 
  "aggs": {
    "total-values": {
      "value_count": {
        "field": "brand.keyword"
      }
    }
  }
}

# Finding the average price of the mobile
GET tv_sales/_search
{
  "size": 0, 
  "aggs": {
    "tv_average_price": {
      "avg": {
        "field": "price_gbp"
      }
    }
  }
}

#Average sales

GET tv_sales/_search
{
  "size": 0, 
  "aggs": {
    "average_price": {
      "avg": {
        "field": "sales"
      }
    }
  }
}

# Sum of all the TVs
GET tv_sales/_search
{
  "size": 0, 
  "aggs": {
    "tv_total_price": {
      "sum": {
        "field": "price_gbp"
      }
    }
  }
}

# Top price of a TV amongst all TVs
GET tv_sales/_search
{
  "aggs": {
    "tv_top_price": {
      "min": {
        "field": "price_gbp"
      }
    }
  }
}

# Best seller TV (maximum sales)
GET tv_sales/_search
{
  "size": 0, 
  "aggs": {
    "tv_sales": {
      "max": {
        "field": "sales"
      }
    }
  }
}

# minimum metric What's the lowest price we have in our index? 
GET tv_sales/_search
{
  "size": 0,
  "aggs": {
    "lowest_price": {
      "min": {
        "field": "price_gbp"
      }
    }
  }
}

#All stats
GET tv_sales/_search
{
  "size": 0,
  "aggs": {
    "all_stats":{
      "stats": {
        "field": "price_gbp"
      }
    }
  }
}

#Extended stats
GET tv_sales/_search
{
  "size": 0,
  "aggs": {
    "extended_stats":{
      "extended_stats": {
        "field": "price_gbp"
      }
    }
  }
}

# Cardinality - unique values of a given field
GET tv_sales/_search
{
  "size": 0,
  "aggs": {
    "unique_tvs": {
      "cardinality": {
        "field": "brand.keyword"
      }
    }
  }
}

# BUCKET Aggregations

## To index books, copy : https://github.com/madhusudhankonda/elasticsearch-in-action/blob/main/datasets/books.txt

# Histogram agg
GET books/_search
{
  "size": 0, 
  "aggs": {
    "ratings_histogram": {
      "histogram": {
        "field": "amazon_rating",
        "interval": 1
      }
    }
  }
}

# Histogram on dates - using calendar_interval
GET books/_search
{
  "size":0,
  "aggs": {
    "release_date_histogram": {
      "date_histogram": {
        "field": "release_date",
        "calendar_interval": "year"
      }
    }
  }
}

# Histogram on with one year interval same as the above
GET books/_search
{
  "size":0,
  "aggs": {
    "release_date_histogram": {
      "date_histogram": {
        "field": "release_date",
        "calendar_interval": "1y"
      }
    }
  }
}

# ERROR: Histogram on dates - using calendar_interval with 4q (NOT ALLOWED)
GET books/_search
{
  "size":0,
  "aggs": {
    "release_date_histogram": {
      "date_histogram": {
        "field": "release_date",
        "calendar_interval": "4q"
      }
    }
  }
}

# Histogram on with one a fixed interval of 2 years (730 days)
GET books/_search
{
  "size":0,
  "aggs": {
    "release_date_histogram": {
      "date_histogram": {
        "field": "release_date",
        "fixed_interval": "730d"
      }
    }
  }
}

# Note the bucket key when using calendar_interval as a year vs fixed_interval as 365d:

GET books/_search
{
  "size":0,
  "aggs": {
    "release_date_histogram": {
      "date_histogram": {
        "field": "release_date",
        "calendar_interval": "1y"
      }
    }
  }
}

GET books/_search
{
  "size":0,
  "aggs": {
    "release_date_histogram": {
      "date_histogram": {
        "field": "release_date",
        "fixed_interval": "365d"
      }
    }
  }
}
# Child (nested) data historgram
GET books/_search
{
  "size":0,
  "aggs": {
    "release_date_histogram": {
      "date_histogram": {
        "field": "release_date",
        "calendar_interval": "1y"
      },
      "aggs": {
        "avg_rating_per_bucket": {
          "avg": {
            "field": "amazon_rating"
          }
        }
      }
    }
  }
}


# Child (nested) data historgram
GET tv_sales/_search?size=0
{
  "aggs": {
    "sales_histogram": {
      "histogram": {
        "field": "sales",
        "interval": "10"
      },
      "aggs": {
        "total_sum": {
          "sum": {
            "field": "price_gbp"
          }
        }
      }
    }
  }
}

## RANGE aggregation
GET books/_search
{
  "size": 0,
  "aggs": {
    "book_ratings_range": {
      "range": {
        "field": "amazon_rating",
        "ranges": [
          {
            "from": 1,
            "to": 4
          },
          {
            "from": 4,
            "to": 5
          }
          
        ]
      }
    }
  }
}

# Terms aggregation
GET books/_search?size=0
{
  "aggs": {
    "author_book_count": {
      "terms": {
        "field": "author.keyword"
      }
    }
  }
}

# Terms aggregation with a custom size
GET books/_search?size=0
{
  "aggs": {
    "author_book_count": {
      "terms": {
        "field": "author.keyword",
        "size": 25
      }
    }
  }
}

# Multi-terms: fetching documents with author and title 
GET books/_search?size=0
{
  "aggs": {
    "author_title_map": {
      "multi_terms": {
        "terms": [
          {
            "field": "author.keyword"
          },
          {
            "field": "title.keyword"
          }
        ]
      }
    }
  }
}

#Significant terms:
GET books/_search
GET books/_search?size=0
{
  "aggs": {
    "NAME": {
      "significant_terms": {
        "field": "title.keyword"
      }
    }
  }
}

## Pipeline Aggregations

PUT coffee_sales/_doc/1
{
  "date":"2022-09-01",
  "sales":{
    "cappuccino":23,
    "latte":12,
    "americano":9,
    "tea":7
  },
  "price":{
    "cappuccino":2.50,
    "latte":2.40,
    "americano":2.10,
    "tea":1.50
  }
}

PUT coffee_sales/_doc/2
{
  "date":"2022-09-02",
  "sales":{
    "cappuccino":40,
    "latte":16,
    "americano":19,
    "tea":15
  },
  "price":{
    "cappuccino":2.50,
    "latte":2.40,
    "americano":2.10,
    "tea":1.50
  }
}

# Peak time coffee sales
PUT peak_coffee_sales/_doc/1
{
  "date":"2022-09-01",
  "hour":7,
  "sales":{
    "cappuccino":123,
    "latte":123,
    "americano":95,
    "tea":37
  }
}

PUT peak_coffee_sales/_doc/2
{
  "date":"2022-09-01",
  "hour":8,
  "sales":{
    "cappuccino":243,
    "latte":428,
    "americano":149,
    "tea":60
  }
}

PUT peak_coffee_sales/_doc/3
{
  "date":"2022-09-01",
  "hour":9,
  "sales":{
    "cappuccino":199,
    "latte":132,
    "americano":85,
    "tea":34
  }
}

PUT peak_coffee_sales/_doc/1
{
  "date":"2022-09-02",
  "hour":7,
  "sales":{
    "cappuccino":223,
    "latte":323,
    "americano":195,
    "tea":97
  }
}

PUT peak_coffee_sales/_doc/2
{
  "date":"2022-09-02",
  "hour":8,
  "sales":{
    "cappuccino":443,
    "latte":628,
    "americano":749,
    "tea":402
  }
}

PUT peak_coffee_sales/_doc/3
{
  "date":"2022-09-02",
  "hour":9,
  "sales":{
    "cappuccino":328,
    "latte":272,
    "americano":192,
    "tea":93
  }
}

# Coffee sales without a pipeline agg:
GET coffee_sales/_search
{
  "size": 0, 
  "aggs": {
    "coffee_sales_by_day": {
      "date_histogram": {
        "field": "date",
        "calendar_interval": "1d"
      },
      "aggs": {
        "cappucino_sales": {
          "sum": {
            "field": "sales.cappuccino"
          }
        }
      }
    }
  }
}

# Two sigbling aggregations
GET coffee_sales/_search
{
  "size": 0,
  "aggs": {
    "coffee_date_histogram": {
      "date_histogram": {
        "field": "date",
        "calendar_interval": "1d"
      }
    },
    "total_sale_of_americanos":{
      "sum": {
        "field": "sales.americano"
      }
    }
  }
}

# Two sigbling aggregations
GET coffee_sales/_search
{
  "size": 0,
  "aggs": {
    "coffee_date_histogram": {
      "date_histogram": {
        "field": "date",
        "calendar_interval": "1d"
      },
      "aggs": {
        "total_sum_americano": {
          "sum": {
            "field": "price.americano"
          }
        },
        "cum_sum": {
          "cumulative_sum": {
            "buckets_path": "total_sum_americano"
          }
        }
      }
    },
    "total_sale_of_americanos": {
      "sum": {
        "field": "sales.americano"
      }
    }
  }
}

# Cumulative sum of cappuccinos sold
GET coffee_sales/_search
{
  "size": 0,
  "aggs": {
    "sales_by_coffee": {
      "date_histogram": {
        "field": "date",
        "calendar_interval": "1d"
      },
      "aggs": {
        "cappuccino_sales": {
          "sum": {
            "field": "sales.cappuccino"
          }
        },
        "total_cappuccinos": {
          "cumulative_sum": {
            "buckets_path": "cappuccino_sales"
          }
        }
      }
    }
  }
}

# Max sum of cappuccinos sold
GET coffee_sales/_search
{
  "size": 0,
  "aggs": {
    "sales_by_coffee": {
      "date_histogram": {
        "field": "date",
        "calendar_interval": "1d"
      },
      "aggs": {
        "cappuccino_sales": {
          "sum": {
            "field": "sales.cappuccino"
          }
        }
      }
    },
    "highest_cappuccino_sales_bucket":{
      "max_bucket": {
        "buckets_path": "sales_by_coffee>cappuccino_sales"
      }
    }
  }
}

# Min sum of cappuccinos sold
GET coffee_sales/_search
{
  "size": 0,
  "aggs": {
    "sales_by_coffee": {
      "date_histogram": {
        "field": "date",
        "calendar_interval": "1d"
      },
      "aggs": {
        "cappucino_sales": {
          "sum": {
            "field": "sales.cappuccino"
          }
        }
      }
    },
    "lowest_cappucino_sales_bucket":{
      "min_bucket": {
        "buckets_path": "sales_by_coffee>cappucino_sales"
      }
    }
  }
}

# Sum of cappuccinos sold
GET coffee_sales/_search
{
  "size": 0,
  "aggs": {
    "sales_by_coffee": {
      "date_histogram": {
        "field": "date",
        "calendar_interval": "1d"
      },
      "aggs": {
        "cappucino_sales": {
          "sum": {
            "field": "sales.cappuccino"
          }
        }
      }
    },
    "top_bucket":{
      "sum_bucket": {
        "buckets_path": "sales_by_coffee>cappucino_sales"
      }
    }
  }
}
